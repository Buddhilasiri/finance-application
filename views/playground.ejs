<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Playground</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/styles.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="bg-dark text-light">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-4">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">Finance Planner</a>
            <div class="collapse navbar-collapse">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Expenses</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/budgets">Budgets</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/playground">Playground</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    
    <div class="container mt-5">
        <h1 class="text-center">Playground</h1>
        <p class="text-center">Use this space to experiment with budgets. Changes here are not saved to the main data.</p>

        <!-- Form to add playground budgets -->
        <form id="playgroundForm" class="mb-4">
            <div class="row">
                <div class="col-md-4">
                    <input type="text" class="form-control" placeholder="Category" id="playgroundCategory">
                </div>
                <div class="col-md-4">
                    <input type="number" class="form-control" placeholder="Amount" id="playgroundAmount">
                </div>
                <div class="col-md-4">
                    <button type="button" class="btn btn-success w-100" onclick="addBudget()">Add Budget</button>
                </div>
            </div>
        </form>

        <!-- Fixed-size chart for Playground budgets -->
        <div class="d-flex justify-content-center">
            <canvas id="playgroundChart" width="400" height="400"></canvas>
        </div>
    </div>

    <script>
        const playgroundBudgets = [];
        let playgroundChart;

        function addBudget() {
            const category = document.getElementById('playgroundCategory').value;
            const amount = parseFloat(document.getElementById('playgroundAmount').value);
            
            if (category && !isNaN(amount)) {
                playgroundBudgets.push({ category, amount });
                updateChart();
            }

            // Clear input fields
            document.getElementById('playgroundCategory').value = '';
            document.getElementById('playgroundAmount').value = '';
        }

        function updateChart() {
            const labels = playgroundBudgets.map(b => b.category);
            const data = playgroundBudgets.map(b => b.amount);

            if (playgroundChart) {
                playgroundChart.data.labels = labels;
                playgroundChart.data.datasets[0].data = data;
                playgroundChart.update();
            } else {
                const ctx = document.getElementById('playgroundChart').getContext('2d');
                playgroundChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels,
                        datasets: [{
                            data,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function(tooltipItem) {
                                        return `${tooltipItem.label}: ${tooltipItem.raw.toFixed(2)}`;
                                    }
                                }
                            }
                        }
                    }
                });
            }
        }
    </script>
</body>
</html>
