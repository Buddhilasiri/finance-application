<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Finance Planner</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/styles.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="bg-dark text-light">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-4">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">Finance Planner</a>
            <div class="collapse navbar-collapse">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Expenses</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/budgets">Budgets</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    
    <div class="text-center mb-4">
        <label for="timeFilter" class="form-label">View by:</label>
        <select id="timeFilter" class="form-select w-auto d-inline-block">
            <option value="day" <%= timeFrame === 'day' ? 'selected' : '' %>>Day</option>
            <option value="week" <%= timeFrame === 'week' ? 'selected' : '' %>>Week</option>
            <option value="month" <%= timeFrame === 'month' ? 'selected' : '' %>>Month</option>
        </select>
    </div>
    
    <script>
        document.getElementById('timeFilter').addEventListener('change', function() {
            const timeFrame = this.value;
            window.location.href = `/?timeFrame=${timeFrame}`;
        });
    </script>
    
    <div class="container mt-5">
        <h1 class="text-center">Finance Planner</h1>
        <form action="/add-expense" method="POST" class="my-4">
            <div class="row">
                <div class="col-md-3">
                    <select name="expense_category" class="form-select">
                        <option value="Food">Food</option>
                        <option value="Travel">Travel</option>
                        <option value="Social">Social</option>
                        <option value="Health">Health</option>
                        <option value="Mobile Bill">Mobile Bill</option>
                        <option value="Internet">Internet</option>
                        <option value="Self Love">Self Love</option>
                        <option value="Other">Other</option>
                        <option value="Savings">Savings</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <input type="text" name="description" class="form-control" placeholder="Description" required>
                </div>
                <div class="col-md-3">
                    <input type="number" name="amount" step="0.01" class="form-control" placeholder="Amount" required>
                </div>
                <div class="col-md-3">
                    <button type="submit" class="btn btn-primary w-100">Add Expense</button>
                </div>
            </div>
        </form>

        <h2 class="text-center mt-5">Budget vs. Expenses</h2>
        <table class="table table-dark table-hover mt-3">
            <thead>
                <tr>
                    <th>Category</th>
                    <th>Budget</th>
                    <th>Spent</th>
                    <th>Remaining</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% budgets.forEach(budget => { 
                    let totalSpent = 0;
                    expenses.forEach(expense => {
                        if (expense.expense_category === budget.category) {
                            totalSpent += expense.amount;
                    %>
                        <tr>
                            <td><%= budget.category %></td>
                            <td><%= budget.budget_amount %></td>
                            <td><%= totalSpent %></td>
                            <td><%= budget.budget_amount - totalSpent %></td>
                            <td>
                                <!-- Delete Expense Form -->
                                <form action="/delete-expense" method="POST" onsubmit="return confirm('Are you sure you want to delete this expense?');">
                                    <input type="hidden" name="id" value="<%= expense.id %>">
                                    <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                </form>
                            </td>
                        </tr>
                    <% 
                        } 
                    }); 
                }) %>
            </tbody>
            
            
        </table>
    </div>
    <h2 class="text-center mt-5">Spending Overview</h2>
    <div class="container">
        <canvas id="budgetChart" width="400" height="400"></canvas>
    </div>
    <script>
        const ctx = document.getElementById('budgetChart').getContext('2d');
        
        const budgetData = <%- JSON.stringify(budgets) %>; // Fetch budgets from server-side
        const expenseData = <%- JSON.stringify(expenses) %>; // Fetch expenses from server-side
        
    
        // Calculate the total spent per category
        const spentData = budgetData.map(budget => {
            let totalSpent = 0;
            expenseData.forEach(expense => {
                if (expense.expense_category === budget.category) {
                    totalSpent += expense.amount;
                }
            });
            return totalSpent;
        });
    
        // Calculate the remaining budget for each category
        const remainingData = budgetData.map((budget, index) => {
            return budget.budget_amount - spentData[index];
        });
    
        // Create the pie chart
        new Chart(ctx, {
            type: 'pie',
            data: {
                labels: budgetData.map(b => b.category), // Category names
                datasets: [{
                    label: 'Spending Overview',
                    data: spentData.map((spent, index) => spent + remainingData[index]), // Total (spent + remaining)
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(199, 199, 199, 0.2)',
                        'rgba(83, 102, 255, 0.2)' // Add more colors if necessary
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(199, 199, 199, 1)',
                        'rgba(83, 102, 255, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                const category = tooltipItem.label;
                                const spent = spentData[tooltipItem.dataIndex];
                                const remaining = remainingData[tooltipItem.dataIndex];
                                return `${category}: Spent ${spent.toFixed(2)}, Remaining ${remaining.toFixed(2)}`;
                            }
                        }
                    }
                }
            }
        });
    </script>
    <div class="text-center my-4">
        <form action="/reset-expenses" method="POST" onsubmit="return confirm('Are you sure you want to reset all expenses?');">
            <button type="submit" class="btn btn-danger">Reset Expenses (Allowance Received)</button>
        </form>
    </div>
    

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
